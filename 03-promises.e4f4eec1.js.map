{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAgB/B,OAfgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAACH,E,MAASC,IAIlBG,EAAO,C,SAACJ,E,MAASC,GAAO,GAG1BA,EAAM,G,CAhDCO,SAASC,cAAc,SAE/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,eAE9BC,EAAO,GACbH,EAASI,SAAQ,CAACC,EAAOC,KACvBH,EAAKG,GAAOC,OAAOF,EAAM,IAG3B,IAAIjB,EAAQe,EAAKf,MAEjB,IAAK,IAAIoB,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,GAAK,EAExBtB,EAAcsB,EAAI,EAAGpB,GASlCsB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEjBJ,EAAA2B,OAAOC,QAAQ,sBAAsBzB,QAAeC,MAAU,IAE/DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAElBJ,EAAA2B,OAAOG,QAAQ,qBAAqB3B,QAAeC,MAAU,IAb7DA,GAASe,EAAKY,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => { \n  event.preventDefault();\n\n  const formData = new FormData(event.currentTarget);\n  \n  const data = {};\n  formData.forEach((value, key) => {\n    data[key] = Number(value);\n  });\n\n  let delay = data.delay;\n\n  for (let i = 0; i < data.amount; i += 1) { \n    \n    showPromise(createPromise(i + 1, delay))\n   \n    delay += data.step;\n  }\n\n})\n\nfunction showPromise(promise) { \n promise\n  .then(({ position, delay }) => {\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notify.success(` Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notify.failure(` Rejected promise ${position} in ${delay}ms`)\n  });\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n\n        resolve({position,delay})\n    \n      } else {\n\n        reject({position,delay})\n        \n      }\n    },delay)\n  })\n\n  return promise\n  \n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","formData","FormData","currentTarget","data","forEach","value","key","Number","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.e4f4eec1.js.map"}